/* [project]/src/app/globals.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after {
      --tw-border-style: solid;
    }

    ::backdrop {
      --tw-border-style: solid;
    }
  }
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.static {
  position: static;
}

.sticky {
  position: -webkit-sticky;
  position: sticky;
}

.z-20 {
  z-index: 20;
}

.z-40 {
  z-index: 40;
}

.ml-auto {
  margin-left: auto;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.inline-block {
  display: inline-block;
}

.h-screen {
  height: 100vh;
}

.min-h-screen {
  min-height: 100vh;
}

.w-3\/4 {
  width: 75%;
}

.w-full {
  width: 100%;
}

.max-w-\[80\%\] {
  max-width: 80%;
}

.flex-1 {
  flex: 1;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.items-start {
  align-items: flex-start;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.truncate {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.overflow-auto {
  overflow: auto;
}

.rounded-full {
  border-radius: 3.40282e38px;
}

.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}

.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}

.border-l-4 {
  border-left-style: var(--tw-border-style);
  border-left-width: 4px;
}

.bg-gradient-to-b {
  --tw-gradient-position: to bottom in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.opacity-50 {
  opacity: .5;
}

.opacity-80 {
  opacity: .8;
}

.transition {
  transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}

.focus\:outline-none:focus {
  --tw-outline-style: none;
  outline-style: none;
}

html, body {
  background-color: #111827;
  height: 100%;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

/*# sourceMappingURL=src_app_globals_b805903d.css.map*/